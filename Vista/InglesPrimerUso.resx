<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAgregarUsuarioPrimerUsu" xml:space="preserve">
    <value>Add username</value>
    <comment>Primer Uso. FrmPrimerUsuario</comment>
  </data>
  <data name="btnPrimerUso" xml:space="preserve">
    <value>To access</value>
  </data>
  <data name="chkContacto" xml:space="preserve">
    <value>Register contact</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="grbDatosNuevoUsuario" xml:space="preserve">
    <value>New user data</value>
    <comment>Primer Uso. FrmPrimerUsuario</comment>
  </data>
  <data name="lblAccederPrimerUso" xml:space="preserve">
    <value>Press the button to access the first use</value>
    <comment>Primer Uso. FrmPrimerUso</comment>
  </data>
  <data name="lblAgregarDatosNuevoEmp" xml:space="preserve">
    <value>Add
data</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblApellidosNuevoEmp" xml:space="preserve">
    <value>Last names:</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblContextoPrimerUso" xml:space="preserve">
    <value>To put you in context, the system has not detected any currently registered user, so 
you will have the mission of registering the first employee, then the first user. Later it will be explained to you.</value>
    <comment>Primer Uso. FrmPrimerUso</comment>
  </data>
  <data name="lblCorreoNuevoUsu" xml:space="preserve">
    <value>Adress gmail:</value>
    <comment>Primer Uso. FrmPrimerUsuario</comment>
  </data>
  <data name="lblDatosNuevoEmp" xml:space="preserve">
    <value>New employee data</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblDepartamentoNuevoEmp" xml:space="preserve">
    <value>Departament:</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblHolaPrimerUso" xml:space="preserve">
    <value>Hi! Welcome to the veterinary administrator system, in which you can manage the 
information of a veterinary, in a general way.</value>
    <comment>Primer Uso. FrmPrimerUso</comment>
  </data>
  <data name="lblHolaPrimerUsuario" xml:space="preserve">
    <value>Hello again, as you just entered the first employee, now what continues is to 
add the first user with that would be enough, so you can start to see the system and use it.</value>
    <comment>Primer Uso. FrmPrimerUsuario</comment>
  </data>
  <data name="lblInfoRegistrarEmp" xml:space="preserve">
    <value>At the moment there is no employee, so you are in charge of registering the first employee, and then creating him
a user and later we will continue to explain the process you must follow to finish configuring the system
and be able to use it without any intervention</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblMunicipioNuevoEmp" xml:space="preserve">
    <value>Municipality:</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblNacimientoNuevoEmp" xml:space="preserve">
    <value>Date of birth:</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblNombreNuevoEmp" xml:space="preserve">
    <value>Names:</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblNombreNuevoUsu" xml:space="preserve">
    <value>Username:</value>
    <comment>Primer Uso. FrmPrimerUsuario</comment>
  </data>
  <data name="lblNumDocNuevoEmp" xml:space="preserve">
    <value>Document number:</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblNumTelsNuevoEmp" xml:space="preserve">
    <value>Number of contact:</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblRegistrarEmp" xml:space="preserve">
    <value>The first employee you sign up will have to be a manager</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
  <data name="lblReglasPrimerUsuario" xml:space="preserve">
    <value>Remember that this user will be a manager capable
 of having all the administration functions.
This user user will have a default password that is "NewPassword123".
Please fill in all the fields that the form asks for.</value>
    <comment>Primer Uso. FrmPrimerUsuario</comment>
  </data>
  <data name="lblSelecEmpleados" xml:space="preserve">
    <value>Select the employee you are</value>
    <comment>Primer Uso. FrmPrimerUsuario</comment>
  </data>
  <data name="lblTipoDocNuevoEmp" xml:space="preserve">
    <value>Document type:</value>
    <comment>Primer Uso. FrmPrimerEmpleado</comment>
  </data>
</root>